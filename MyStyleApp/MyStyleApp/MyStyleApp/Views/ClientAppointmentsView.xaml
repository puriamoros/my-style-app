<?xml version="1.0" encoding="utf-8" ?>
<views:CustomContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MyStyleApp.Views.ClientAppointmentsView"
             xmlns:controls="clr-namespace:MyStyleApp.Views.Controls"
             xmlns:gestures="clr-namespace:MyStyleApp.Views.Gestures"
             xmlns:views="clr-namespace:MyStyleApp.Views"
             xmlns:mvvmcorebehaviors="clr-namespace:MvvmCore.Behaviors"
             Padding="{StaticResource PagePadding}"
             Title="{Binding LocalizedStrings[appointments]}" Icon="Calendar.png">

  <Grid RowSpacing="0">
    <StackLayout Padding="{StaticResource TabContentPadding}">
      <!-- Without HasUnevenRows="True", list items does not render well in Android -->
      <ListView x:Name="AppointmentList"
        ItemsSource="{Binding AppointmentList}"
        HasUnevenRows="True"
        gestures:ListViewItemTapped.Command="{Binding AppointmentDetailsCommand}"
        ItemSelected="OnItemListSelection">
                    
        <ListView.ItemTemplate>
          <DataTemplate>
            <ViewCell x:Name="Appointment">
              <StackLayout Padding="{StaticResource ListViewItemPadding}">
                <StackLayout>
                  <Label VerticalOptions="Center" Style="{StaticResource LargeTextStyle}" FontAttributes="Bold"
                    Text="{Binding EstablishmentName}" SizeChanged="OnLabelSizeChanged"/>
                </StackLayout>
                                  
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*" />
                    <ColumnDefinition Width="58*" />
                    <ColumnDefinition Width="6*" />
                    <ColumnDefinition Width="30*" />
                  </Grid.ColumnDefinitions>
                  <RelativeLayout Grid.Column="0" VerticalOptions="Center">
                    <Image Aspect="AspectFit" Source="Calendar.png"
                      RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"/>
                  </RelativeLayout>
                  <Label Grid.Column="1" VerticalOptions="Center" Style="{StaticResource MediumTextStyle}"
                    Text="{Binding Date, StringFormat='{0:d}'}" />
                  <RelativeLayout Grid.Column="2" VerticalOptions="Center">
                    <Image Aspect="AspectFit" Source="Clock.png"
                      RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"/>
                  </RelativeLayout>
                  <Label Grid.Column="3" VerticalOptions="Center" Style="{StaticResource MediumTextStyle}"
                    Text="{Binding Date, StringFormat='{0:t}'}" />
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*" />
                    <ColumnDefinition Width="58*" />
                    <ColumnDefinition Width="6*" />
                    <ColumnDefinition Width="30*" />
                  </Grid.ColumnDefinitions>

                  <RelativeLayout Grid.Column="0">
                    <Image Aspect="AspectFit" Source="Mirror.png"
                      RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"
                      RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.1}"/>
                  </RelativeLayout>

                  <StackLayout Grid.Column="1">
                    <Label Style="{StaticResource MediumTextStyle}"
                      Text="{Binding ServiceName}" SizeChanged="OnLabelSizeChanged"/>
                  </StackLayout>

                  <RelativeLayout Grid.Column="2">
                    <Image Aspect="AspectFit" Source="EuroPriceTag.png"
                      RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"
                      RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.1}"/>
                  </RelativeLayout>

                  <StackLayout Grid.Column="3">
                    <Label Style="{StaticResource MediumTextStyle}"
                      Text="{Binding ServicePrice, StringFormat='{0:0.00}€'}" SizeChanged="OnLabelSizeChanged"/>
                  </StackLayout>
                </Grid>
                               
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*" />
                    <ColumnDefinition Width="95*" />
                  </Grid.ColumnDefinitions>
                  <RelativeLayout Grid.Column="0" VerticalOptions="Center" >
                    <Image Aspect="AspectFit" Source="Pending.png" 
                      IsVisible="{Binding Status, Converter={StaticResource AppointmentStatusToBoolConverter}, ConverterParameter=Pending}"
                      RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"/>
                    <Image Aspect="AspectFit" Source="Confirmed.png" 
                      IsVisible="{Binding Status, Converter={StaticResource AppointmentStatusToBoolConverter}, ConverterParameter=Confirmed}"
                      RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"/>
                    <Image Aspect="AspectFit" Source="Cancelled.png" 
                      IsVisible="{Binding Status, Converter={StaticResource AppointmentStatusToBoolConverter}, ConverterParameter=Cancelled}"
                      RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"/>
                  </RelativeLayout>
                  <StackLayout Grid.Column="1">
                    <Label Style="{StaticResource SmallTextStyle}" VerticalOptions="Center"
                      Text="{Binding Source={x:Reference AppointmentList}, Path=BindingContext.LocalizedStrings[appointment_status_0]}"
                      TextColor="{StaticResource PendingColor}"
                      IsVisible="{Binding Status, Converter={StaticResource AppointmentStatusToBoolConverter}, ConverterParameter=Pending}"/>
                    <Label Style="{StaticResource SmallTextStyle}" VerticalOptions="Center"
                      Text="{Binding Source={x:Reference AppointmentList}, Path=BindingContext.LocalizedStrings[appointment_status_1]}"
                      TextColor="{StaticResource ConfirmedColor}"
                      IsVisible="{Binding Status, Converter={StaticResource AppointmentStatusToBoolConverter}, ConverterParameter=Confirmed}"/>
                    <Label Style="{StaticResource SmallTextStyle}" VerticalOptions="Center"
                      Text="{Binding Source={x:Reference AppointmentList}, Path=BindingContext.LocalizedStrings[appointment_status_2]}"
                      TextColor="{StaticResource CancelledColor}"
                      IsVisible="{Binding Status, Converter={StaticResource AppointmentStatusToBoolConverter}, ConverterParameter=Cancelled}"/>
                  </StackLayout>
                </Grid>
                  
                <BoxView HeightRequest="1" BackgroundColor="Gray"
                  IsVisible="{Binding Converter={StaticResource PlatformToBoolConverter}, ConverterParameter=Win}" />                   
              </StackLayout>
            
              <ViewCell.ContextActions>
                <MenuItem Text="{Binding Source={x:Reference AppointmentList}, Path=BindingContext.LocalizedStrings[cancel]}"
                  IsDestructive="True"
                  Command="{Binding Source={x:Reference AppointmentList}, Path=BindingContext.CancelCommand}"
                  CommandParameter="{Binding Source={x:Reference Appointment}, Path=BindingContext}" />
              </ViewCell.ContextActions>
            
            </ViewCell>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
    </StackLayout>
    <controls:WaitingOverlayControl
      IsVisible="{Binding IsBusy}"
      Text="{Binding LocalizedStrings[waiting]}"/>
  </Grid>
</views:CustomContentPage>