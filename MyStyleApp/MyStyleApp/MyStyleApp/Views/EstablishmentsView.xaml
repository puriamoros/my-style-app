<?xml version="1.0" encoding="utf-8" ?>
<views:CustomContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MyStyleApp.Views.EstablishmentsView"
             xmlns:controls="clr-namespace:MyStyleApp.Views.Controls"
             xmlns:mvvmcorebehaviors="clr-namespace:MvvmCore.Behaviors"
             xmlns:views="clr-namespace:MyStyleApp.Views"
             xmlns:fe="clr-namespace:FreshEssentials;assembly=FreshEssentials"
             Padding="{StaticResource PagePadding}"
             Title="{Binding LocalizedStrings[results]}">
  <Grid>
    <StackLayout Padding="{StaticResource PageContentPadding}">
      <Label
            Text="{Binding LocalizedStrings[results]}"
            Style="{StaticResource LargeTextStyle}"
            HorizontalOptions="Center"
            IsVisible="{Binding Converter={StaticResource PlatformToBoolConverter}, ConverterParameter=!iOS}"/>
      
      <!-- Without HasUnevenRows="True", list items does not render well in Android -->
      <ListView x:Name="EstablishmentsList"
        ItemsSource="{Binding EstablishmentsList}"
        HasUnevenRows="True"
        fe:ListViewItemTappedAttached.Command="{Binding ViewDetailsCommand}">
        <!--<ListView.Behaviors>
          <mvvmcorebehaviors:EventToCommandBehavior
            EventName="ItemTapped"
            Command="{Binding ViewDetailsCommand}"
            EventArgsConverter="{StaticResource ItemTappedEventArgsConverter}" />
        </ListView.Behaviors>-->
        <ListView.ItemTemplate>
          <DataTemplate>
            <ViewCell x:Name="Establishment">
                <RelativeLayout>
                  <StackLayout Spacing="2" Padding="0,5,0,5"
                    RelativeLayout.XConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0}"
                    RelativeLayout.WidthConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.92}"
                    RelativeLayout.YConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0}">
                      <Label Text="{Binding Name}" Style="{StaticResource MediumTextStyle}" />
                      <Label Text="{Binding Address}" Style="{StaticResource SmallTextStyle}" />
                      <Label Text="{Binding ShortenServices[0].Price, Converter={StaticResource FloatToPriceConverter}}" Style="{StaticResource SmallTextStyle}" />
                  </StackLayout>
                  <Image Aspect="AspectFit" Source="Favourite.png"
                    RelativeLayout.XConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.92}"
                    RelativeLayout.WidthConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.08}"
                    RelativeLayout.YConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0}"
                    fe:TappedGestureAttached.Command="{Binding Source={x:Reference EstablishmentsList}, Path=BindingContext.AddToFavouritesCommand}"
                    fe:TappedGestureAttached.CommandParameter="{Binding Source={x:Reference Establishment}, Path=BindingContext}"
                    IsVisible="{Binding IdFavourite, Converter={StaticResource IntToBoolConverter}, ConverterParameter=!}">
                    <!--<Image.GestureRecognizers>
                      <TapGestureRecognizer
                        Command="{Binding Source={x:Reference EstablishmentsList}, Path=BindingContext.AddToFavouritesCommand}"
                        CommandParameter="{Binding Source={x:Reference Establishment}, Path=BindingContext}" />
                    </Image.GestureRecognizers>-->
                  </Image>
                  <Image Aspect="AspectFit" Source="FavouriteFilled.png"
                    RelativeLayout.XConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.92}"
                    RelativeLayout.WidthConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.08}"
                    RelativeLayout.YConstraint=
                      "{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0}"
                    fe:TappedGestureAttached.Command="{Binding Source={x:Reference EstablishmentsList}, Path=BindingContext.DeleteFavouriteCommand}"
                    fe:TappedGestureAttached.CommandParameter="{Binding Source={x:Reference Establishment}, Path=BindingContext}"
                    IsVisible="{Binding IdFavourite, Converter={StaticResource IntToBoolConverter}}">
                    <!--<Image.GestureRecognizers>
                      <TapGestureRecognizer
                        Command="{Binding Source={x:Reference EstablishmentsList}, Path=BindingContext.DeleteFavouriteCommand}"
                        CommandParameter="{Binding Source={x:Reference Establishment}, Path=BindingContext}" />
                    </Image.GestureRecognizers>-->
                  </Image>
                </RelativeLayout>
              <ViewCell.ContextActions>
                <MenuItem Text="{Binding Source={x:Reference EstablishmentsList}, Path=BindingContext.LocalizedStrings[book]}"
                  Command="{Binding Source={x:Reference EstablishmentsList}, Path=BindingContext.BookCommand}"
                  CommandParameter="{Binding Source={x:Reference Establishment}, Path=BindingContext}" />

                <MenuItem Text="{Binding Source={x:Reference EstablishmentsList}, Path=BindingContext.LocalizedStrings[view_details]}"
                  Command="{Binding Source={x:Reference EstablishmentsList}, Path=BindingContext.ViewDetailsCommand}"
                  CommandParameter="{Binding Source={x:Reference Establishment}, Path=BindingContext}" />
              </ViewCell.ContextActions>
            </ViewCell>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
    </StackLayout>
    <controls:WaitingOverlayControl
      IsVisible="{Binding IsBusy}"
      Text="{Binding LocalizedStrings[waiting]}"/>
  </Grid>
</views:CustomContentPage>